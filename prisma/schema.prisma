// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum ADMIN_STATUS {
  PENDING
  ACTIVE
  BLOCK
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  password    String
  role        Role     @default(USER)
  status      ADMIN_STATUS? 

  // Relations
  adminProfile AdminProfile?
  userProfile  UserProfile?

  createdById String?
  createdBy   User?      @relation("AdminCreatesUser", fields: [createdById], references: [id])
  createdUsers User[]    @relation("AdminCreatesUser")

  isVerified  Boolean    @default(false)
  isDeleted   Boolean    @default(false)
  phoneNumber  String?

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  otp           String?    
  otpExpiresAt  DateTime?  

  country      String?
  profile      String?
}

model AdminProfile {
  id         String   @id @default(uuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])

  // Admin Specific Info
  designation   String?
  department    String?
  permissions   Json?      // store permissions as array/object
}

model UserProfile {
  id         String   @id @default(uuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])

  // User Specific Info
  
  
}




