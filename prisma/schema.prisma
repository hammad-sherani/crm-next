// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum ADMIN_STATUS {
  PENDING
  ACTIVE
  BLOCK
}

model User {
  id               String         @id @default(uuid())
  name             String
  email            String         @unique
  password         String

  phoneNumber      String?        // Sirf Admin ke liye optional
  country          String?        // Sirf Admin ke liye optional
  status           ADMIN_STATUS?  // Sirf Admin ke liye optional
  role             Role           @default(USER)

  // Self Relation (Admin â†’ Users)
  createdById      String?
  createdBy        User?          @relation("AdminCreatesUser", fields: [createdById], references: [id])
  createdUsers     User[]         @relation("AdminCreatesUser")

  // Email / OTP verification
  isVerified       Boolean        @default(false)
  verifyOtp        String?        // null if verified
  expireVerifyOtp  DateTime?      // null if verified

  // Profile & Soft delete
  profile          String         @default("")  // or default placeholder image
  isDeleted        Boolean        @default(false)

  // Timestamps
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

